{
  "_args": [
    [
      "scopedfs@~0.1.0",
      "/home/james/CsProjects/Fall2018/InetWebSys/Carnation"
    ]
  ],
  "_from": "scopedfs@>=0.1.0 <0.2.0",
  "_id": "scopedfs@0.1.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/scopedfs",
  "_npmUser": {
    "email": "andrey@tarantsov.com",
    "name": "andreyvit"
  },
  "_npmVersion": "1.1.62",
  "_phantomChildren": {},
  "_requested": {
    "name": "scopedfs",
    "raw": "scopedfs@~0.1.0",
    "rawSpec": "~0.1.0",
    "scope": null,
    "spec": ">=0.1.0 <0.2.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/scopedfs/-/scopedfs-0.1.0.tgz",
  "_shasum": "7fec34f7541506ee62823401c701c3184df720bf",
  "_shrinkwrap": null,
  "_spec": "scopedfs@~0.1.0",
  "_where": "/home/james/CsProjects/Fall2018/InetWebSys/Carnation",
  "author": {
    "email": "andrey@tarantsov.com",
    "name": "Andrey Tarantsov"
  },
  "bugs": {
    "url": "https://github.com/andreyvit/scopedfs.js/issues"
  },
  "dependencies": {
    "mkdirp": "~0.3.4",
    "rimraf": "~2.0.2",
    "temp": "~0.4.0"
  },
  "description": "A convenient API to build and access file system subtrees (particularly in tests); provides a version of every ‘fs’ module function, scoped to the given root or, optionally, to a new temporary directory; also adds a bunch of convenience methods",
  "devDependencies": {
    "mocha": "~1.6.0"
  },
  "directories": {},
  "dist": {
    "shasum": "7fec34f7541506ee62823401c701c3184df720bf",
    "tarball": "https://registry.npmjs.org/scopedfs/-/scopedfs-0.1.0.tgz"
  },
  "homepage": "https://github.com/andreyvit/scopedfs.js",
  "keywords": [
    "fixture",
    "fs",
    "scoped",
    "temp"
  ],
  "license": "MIT",
  "main": "lib/scopedfs.js",
  "maintainers": [
    {
      "name": "andreyvit",
      "email": "andrey@tarantsov.com"
    }
  ],
  "name": "scopedfs",
  "optionalDependencies": {},
  "readme": "# Scoped FS\n\nA convenient API to build and access file system subtrees (particularly in tests); provides a version of every ‘fs’ module function, scoped to the given root or, optionally, to a new temporary directory; also adds a bunch of convenience methods.\n\nSynopsis 1 — can be used as a drop-in ‘fs’ replacement:\n\n    fs = require 'scopedfs'\n    fs.writeFileSync '/tmp/foo.txt', '42'\n\nSynopsis 2 — can be used as a scoped file system:\n\n    sfs = require('scopedfs').scoped('/tmp')\n    sfs.writeFileSync 'foo.txt', '42'\n\nSynopsis 3 — can be used to quickly build a temporary folder:\n\n    sfs = require('scopedfs').createTempFS()\n    sfs.writeFileSync 'foo.txt', '42'\n    sfs.writeFileSync 'bar.txt', '24'\n\nor even shorter:\n\n    sfs = require('scopedfs').createTempFS()\n    sfs.applySync {\n        'foo.txt': '42'\n        'bar.txt': '24'\n    }\n\n\n## Installation\n\n    npm install scopedfs\n\n\n## API\n\nAn instance of ScopedFS is returned by `require('scopedfs')`, and also by `scoped` and `createTempFS` methods. Every instance of ScopedFS defines the following functions:\n\n* All functions from Node.js ‘fs’ module:\n\n        sfs.stat(path, callback)\n        sfs.statSync(path)\n        sfs.readFile(relpath, encoding, callback)\n        sfs.readFileSync(relpath, encoding)\n        …etc etc etc…\n\n* Recursive rmdir, courtesy of [rimraf](https://npmjs.org/package/rimraf):\n\n        sfs.rmrf(path, callback)\n        sfs.rmrfSync(path, callback)\n\n* Recursive mkdir, courtesy of [mkdirp](https://npmjs.org/package/mkdirp):\n\n        sfs.mkdirp(path, [mode], callback)\n        sfs.mkdirpSync(path, [mode])\n\n* A shortcut for `mkdirpSync` and `writeFileSync`:\n\n        sfs.putSync(path, data, [encoding])\n\n* A convenient method for creating or modifying a directory hierarchy, doing a combination of `putSync`, `mkdirpSync` and `rmrfSync` (especially helpful when writing tests):\n\n        sfs.applySync {\n          'foo/bar.txt': '42'          # putSync\n          'foo/boz.txt': null          # rmrfSync when the value is null\n          'foo/boz/':    yes           # mkdirpSync when the key ends with a slash\n          'foo/biz':     function(path) { fs.chmodSync(path, 0777); }  # any function accepting a full path\n        }\n\n* Creating a scoped fs for the given directory:\n\n        sfs.scoped(subpath)\n\n* Creating a scoped fs for a new temporary directory, courtesy of [temp](https://npmjs.org/package/temp):\n\n        sfs.createTempFS([affixes])\n\n    where `affixes` is either a prefix string (like `\"myapp-\"`) or an object like `{ prefix: \"d-\", suffix: \".app\" }`.\n\n\n## License\n\nMIT. © 2012, Andrey Tarantsov.\n",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/andreyvit/scopedfs.js.git"
  },
  "scripts": {
    "test": "./node_modules/mocha/bin/mocha -R ${REPORTER-spec}"
  },
  "version": "0.1.0"
}
