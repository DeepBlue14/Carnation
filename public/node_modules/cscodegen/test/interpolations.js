// Generated by CoffeeScript 1.9.3
(function() {
  suite('Interpolations', function() {
    setup(function() {
      var i, len, letter, ref, results;
      ref = ['a', 'b'];
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        letter = ref[i];
        this["str" + (letter.toUpperCase())] = new CS.String(letter);
        results.push(this["var" + (letter.toUpperCase())] = new CS.Identifier(letter));
      }
      return results;
    });
    return test('simple interpolations', function() {
      eq('"ab"', generate(new CS.ConcatOp(this.strA, this.strB)));
      eq('"a#{b}"', generate(new CS.ConcatOp(this.strA, this.varB)));
      eq('"#{a}b"', generate(new CS.ConcatOp(this.varA, this.strB)));
      eq('"#{a}#{b}"', generate(new CS.ConcatOp(this.varA, this.varB)));
      eq('"aab"', generate(new CS.ConcatOp(this.strA, new CS.ConcatOp(this.strA, this.strB))));
      eq('"#{a}ab"', generate(new CS.ConcatOp(this.varA, new CS.ConcatOp(this.strA, this.strB))));
      eq('"a#{a}b"', generate(new CS.ConcatOp(this.strA, new CS.ConcatOp(this.varA, this.strB))));
      eq('"aa#{b}"', generate(new CS.ConcatOp(this.strA, new CS.ConcatOp(this.strA, this.varB))));
      eq('"#{a}#{a}b"', generate(new CS.ConcatOp(this.varA, new CS.ConcatOp(this.varA, this.strB))));
      eq('"#{a}a#{b}"', generate(new CS.ConcatOp(this.varA, new CS.ConcatOp(this.strA, this.varB))));
      eq('"a#{a}#{b}"', generate(new CS.ConcatOp(this.strA, new CS.ConcatOp(this.varA, this.varB))));
      return eq('"#{a}#{a}#{b}"', generate(new CS.ConcatOp(this.varA, new CS.ConcatOp(this.varA, this.varB))));
    });
  });

}).call(this);

//# sourceMappingURL=interpolations.js.map
