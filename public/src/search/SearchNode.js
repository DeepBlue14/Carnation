// Generated by CoffeeScript 1.9.3
(function() {
  var SearchNode, Twist;

  Twist = require('./Twist.coffee');

  SearchNode = (function() {
    var Channel, Direction;

    Direction = {
      NONE: 0,
      NORTH: 1,
      SOUTH: 2,
      EAST: 3,
      WEST: 4,
      NORTH_WEST: 5,
      NORTH_EAST: 6,
      SOUTH_EAST: 7,
      SOUTH_WEST: 8
    };

    Channel = {
      NONE: 0,
      NORTH: 1,
      SOUTH: 2,
      EAST: 3,
      WEST: 4,
      NORTH_WEST: 5,
      NORTH_EAST: 6,
      SOUTH_EAST: 7,
      SOUTH_WEST: 8
    };

    SearchNode.x;

    SearchNode.y;

    SearchNode.direction;

    SearchNode.channel;

    SearchNode.parent;

    SearchNode.childCount;

    SearchNode.g;

    SearchNode.h;

    SearchNode.f;

    SearchNode.pix;

    SearchNode.pixSum;

    SearchNode.compass;

    function SearchNode(x, y, direction, channel, parent) {
      if (x == null) {
        x = 0;
      }
      if (y == null) {
        y = 0;
      }
      if (direction == null) {
        direction = Direction.NONE;
      }
      if (channel == null) {
        channel = Channel.NONE;
      }
      if (parent == null) {
        parent = null;
      }
      this.x = x;
      this.y = y;
      this.direction = direction;
      this.channel = channel;
      this.parent = parent;
      this.compass = new Twist.Twist();
      if (parent != null) {
        this.pixSum = parent.pixSum;
        this.childCount = parent.childCount + 1;
        this.compass.nCount = parent.compass.nCount;
        this.compass.sCount = parent.compass.sCount;
        this.compass.eCount = parent.compass.eCount;
        this.compass.wCount = parent.compass.wCount;
        this.compass.neCount = parent.compass.neCount;
        this.compass.nwCount = parent.compass.nwCount;
        this.compass.seCount = parent.compass.seCount;
        this.compass.swCount = parent.compass.swCount;
        switch (this.direction) {
          case this.direction === Direction.NONE:
            null;
            break;
          case this.direction === Direction.NORTH:
            this.compass.nCount++;
            break;
          case this.direction === Direction.SOUTH:
            this.compass.sCount++;
            break;
          case this.direction === Direction.EAST:
            this.compass.eCount++;
            break;
          case this.direction === Direction.WEST:
            this.compass.wCount++;
            break;
          case this.direction === Direction.NORTH_EAST:
            this.compass.neCount++;
            break;
          case this.direction === Direction.NORTH_WEST:
            this.compass.nwCount++;
            break;
          case this.direction === Direction.SOUTH_EAST:
            this.compass.seCount++;
            break;
          case this.direction === Direction.SOUTH_WEST:
            this.compass.swCount++;
            break;
          default:
            console.log('');
        }
      } else {
        this.childCount = 0;
        this.compass.nCount = 0;
        this.compass.sCount = 0;
        this.compass.eCount = 0;
        this.compass.wCount = 0;
        this.compass.neCount = 0;
        this.compass.nwCount = 0;
        this.compass.seCount = 0;
        this.compass.swCount = 0;
        this.pixSum = 0.0;
      }
      this.g = 0.0;
      this.h = 0.0;
      this.f = 0.0;
      this.pix = 0.0;
    }

    return SearchNode;

  })();

  if (typeof module !== "undefined" && module.exports) {
    exports.SearchNode = SearchNode;
  } else {
    window.SearchNode = SearchNode;
  }

}).call(this);

//# sourceMappingURL=SearchNode.js.map
